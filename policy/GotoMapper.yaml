needCalibRegistry: true

camera : ../real/camera
defects : ../real/camera

defaultLevel : Ccd 
       
exposures: 
       raw:
         python: lsst.afw.image.DecoratedImageF
         persistable: DecoratedImageF
         template: 'raw/%(dateObs)s/%(filter)s/%(dataType)s-%(ccd)s-%(run)s.fts'
       postISRCCD:
         template: postISRCCD/%(dateObs)s/%(filter)s/postISRCCD-%(ccd)s-%(visit)s-%(run)s.fits
         recipe: lossyBasic
       icExp:
         columns:
               - visit
               - ccd
         template: sci-results/%(dateObs)s/%(filter)s/icExp/icExp-%(ccd)s-%(run)s.fits
       calexp:
         template: sci-results/%(dateObs)s/%(filter)s/calexp/calexp-%(ccd)s-%(run)s.fits
         recipe: lossyBasic
       deepCoadd_directWarp:
         template: deepCoadd/%(filter)s/%(tract)d/%(patch)s/warp-%(filter)s-%(tract)d-%(patch)s-%(visit)s.fits
         recipe: lossyBasic
       deepCoadd_psfMatchedWarp:
         template: deepCoadd/%(filter)s/%(tract)d/%(patch)s/psfMatchedWarp-%(filter)s-%(tract)d-%(patch)s-%(visit)s.fits
       deepDiff_differenceExp:
         template: deepDiff/%(dateObs)s/%(filter)s/diffexp-%(ccd)s-%(visit)s.fits
       deepDiff_matchedExp:
         template: deepDiff/%(dateObs)s/%(filter)s/matchexp-%(ccd)s-%(visit)s.fits
################################SingleVisitDriver########################################
       visitCoadd_calexp:
         recipe: lossyBasic
         persistable: ExposureF
         storage: FitsStorage
         python: lsst.afw.image.ExposureF
         level: Ccd
         tables: raw
         template: visitCoadd/%(dateObs)s/%(filter)s/sci/calexp/calexp-%(ccd)s-%(visit)s.fits
       visitCoadd_icExp:
         persistable: ExposureF
         storage: FitsStorage
         python: lsst.afw.image.ExposureF
         level: Ccd
         tables: raw
         template: 'visitCoadd/%(dateObs)/%(filter)s/charIm/icExp-%(ccd)s-%(visit)s.fits'
       warpCCD:
         recipe: lossyBasic
         persistable: ExposureF
         storage: FitsStorage
         python: lsst.afw.image.ExposureF
         level: Ccd
         tables: raw
         template: 'postISRCCD/%(dateObs)s/%(filter)s/warp-%(ccd)s-%(visit)s-%(run)s.fits'
calibrations:
          bias:
              python: lsst.afw.image.ImageF
              persistable: ImageF
              storage: FitsStorage
              level: Ccd
              tables: bias
              columns: ccd
              columns: taiObs
              reference: raw_visit
              refCols: ccd
              refCols: filter
              validRange: true
              validStartName: validStart
              validEndName: validEnd
              template: BIAS/NONE/BIAS_%(ccd)s_%(calibDate)s.fits

          dark:
              python: lsst.afw.image.ImageF
              persistable: ImageF
              storage: FitsStorage
              level: Ccd
              tables: dark
              columns: ccd
              columns: taiObs
              reference: raw_visit
              refCols: ccd
              refCols: filter
              validRange: true
              validStartName: validStart
              validEndName: validEnd
              template: DARK/NONE/DARK_%(ccd)s_%(calibDate)s.fits
            
          flat:
              python: lsst.afw.image.ImageF
              persistable: ImageF
              filter: True
              storage: FitsStorage
              level: Ccd
              tables: flat
              columns: ccd
              columns: taiObs
              columns: filter
              reference: raw_visit
              refCols: ccd
              refCols: filter
              validRange: true
              validStartName: validStart
              validEndName: validEnd
              template: FLAT/%(filter)s/FLAT_%(ccd)s_%(calibDate)s.fits
            
datasets:
       icExpBackground:
          template: 'sci-results/%(dateObs)s/%(filter)s/icExp/bkgd-icExp-%(ccd)s-%(run)s.fits'
       calexpBackground:
          template: 'sci-results/%(dateObs)s/%(filter)s/calexp/bkgd-calexp-%(ccd)s-%(run)s.fits'
       src:
          template: 'sci-results/%(dateObs)s/%(filter)s/src/src-%(ccd)s-%(run)s.fits'
       icSrc:
          template: 'sci-results/%(dateObs)s/%(filter)s/icSrc/icSrc-%(ccd)s-%(run)s.fits'
       srcMatch: 
          template: 'sci-results/%(dateObs)s/%(filter)s/src/SRCMATCH-%(ccd)s-%(run)s.fits'
       singleFrameDriver_metadata:
          persistable: PropertySet
          python: lsst.daf.base.PropertySet
          storage: BoostStorage
          tables:
                 - raw
                 - raw_visit
          template: 'singleFrameDriver_metadata/%(dateObs)s/%(filter)s/calexp-%(ccd)s-%(run)s.boost'
       deepCoadd_measMatch:
          template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/srcMatch-%(filter)s-%(tract)d-%(patch)s.fits
       deepDiff_diaSrc:
          template: deepDiff/%(dateObs)s/%(filter)s/diaSrc-%(ccd)s-%(visit)s.fits
       deepDiff_metadata:
           template: 'deepDiff_metadata/%(dateObs)s/%(filter)s/diaSrc-%(ccd)s-%(visit)s.fits'
       wcs:
           persistable: ExposureF
           python: lsst.afw.image.ExposureF
           template: '%(run)s/calexp/wcs-%(run)s_%(ccd)s.fits'
       forced_src:
          template: '%(filter)s/tract%(tract)d/FORCEDSRC-%(run)s-%(ccd)s.fits'
       forcedPhotCcd_metadata:
           template: '%(filter)s/tract%(tract)d/forcedPhotCcd_metadata/%(run)s-%(ccd)s.boost'
#####################SingleVisitDriver#################################
       singleVisitDriver_metadata:
          persistable: PropertySet
          python: lsst.daf.base.PropertySet
          storage: YamlStorage
          tables:
                 - raw
                 - raw_visit
          template: 'visitCoadd/%(dateObs)s/%(filter)s/sci/metadata/svd-%(ccd)s-%(visit)s.yaml'
       singleVisitDriver_config:
           persistable: Config
           storage: ConfigStorage
           python: lsst.pipe.drivers.singleFrameDriver.SingleVisitDriverConfig
           template: 'config/singleVisitDriver.py'
       visitCoadd_src:
           persistable: SourceCatalog
           storage: FitsCatalogStorage
           python: lsst.afw.table.SourceCatalog
           tables: raw
           template: 'visitCoadd/%(dateObs)s/%(filter)s/sci/src/src-%(ccd)s-%(visit)s.fits'
       visitCoadd_calexpBackground:
           persistable: PurePythonClass
           storage: FitsCatalogStorage
           python: lsst.afw.math.BackgroundList
           tables: raw
           template: 'visitCoadd/%(dateObs)s/%(filter)s/sci/calexp/bkgd-calexp-%(ccd)s-%(visit)s.fits'
       visitCoadd_icSrc:
           persistable: SourceCatalog
           storage: FitsCatalogStorage
           python: lsst.afw.table.SourceCatalog
           tables: raw
           template: 'visitCoadd/%(dateObs)s/%(filter)s/charIm/src/icSrc-%(ccd)s-%(visit)s.fits'
       visitCoadd_icExpBackground:
           persistable: PurePythonClass
           storage: FitsCatalogStorage
           python: lsst.afw.math.BackgroundList
           tables: raw
           template: 'visitCoadd/%(dateObs)/%(filter)s/charIm/calexp/bkgd-icExp-%(ccd)s-%(visit)s.fits'
#####################VisitCoaddForcedPhot##############################
#       visitCoadd_forced_metadata:
#          persistable: PropertySet
#          python: lsst.daf.base.PropertySet
#          storage: YamlStorage
#          tables:
#                 - raw
#                 - raw_visit
#          template: 'visitCoadd/%(dateObs)s/%(filter)s/forced/metadata/%(ccd)s-%(visit)s.yaml'
       visitCoadd_forced_src:
           persistable: ignored
           storage: FitsCatalogStorage
           python: lsst.afw.table.SourceCatalog
           template: 'visitCoadd/%(dateObs)s/%(filter)s/forced/src/src-%(ccd)s-%(visit)s.fits'
           tables: raw
       visitCoadd_forced_src_schema:
           persistable: ignored
           storage: FitsCatalogStorage
           python: lsst.afw.table.SourceCatalog
           template: 'schema/visitCoadd_forced_src_schema.fits'
       forcedPhotVisit_config:
           persistable: Config
           storage: ConfigStorage
           python: lsst.pipe.drivers.singleFrameDriver.SingleVisitDriverConfig
           template: 'config/ForcedVisit.py'
       forcedPhotVisit_metadata:
           persistable: PropertySet
           storage: YamlStorage
           python: lsst.daf.base.PropertySet
           tables: raw
           template: ''
